#!/usr/bin/env node

parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"mDzt":[function(require,module,exports) {
"use strict";const{Project:e}=require("ts-morph"),t=(t,o)=>{const r=new e({tsConfigFilePath:o}).getSourceFiles(t),c=[];return r.forEach(e=>{const t=e.getImportDeclaration("reselect");if(t){const e=t.getSourceFile().getFilePath();c.push(e)}}),c};module.exports={locateSelectors:t};
},{}],"ElvX":[function(require,module,exports) {
const e=require("fs"),r=require("path"),t=require("yargs"),o=require("find-up"),i=require("chalk"),s=require("boxen"),n=require("code-block-writer").default,{locateSelectors:a}=require("./locateSelectors"),c={padding:1,margin:1,borderStyle:"round",borderColor:"green",color:"red"},l=o.sync([".reselect","reselect.config.json"]),u=l?JSON.parse(e.readFileSync(l)):{},{src:d,out:g,tsConfigPath:f}=t.config(u).option("src",{alias:"s",describe:"source pattern"}).option("out",{alias:"o",describe:"output for generated file"}).option("tsConfigPath",{alias:"tc",describe:"tsConfig path"}).demandOption(["src","out","tsConfigPath"],"Please provide src, out, tsConfigPath arguments to work with this tool ‼️").help().argv;try{const t={src:d,out:g,tsConfigPath:f},o=new n({newLine:"\r\n",indentNumberOfSpaces:2,useTabs:!1,useSingleQuote:!0}),l=a(t.src,t.tsConfigPath),u=r.parse(t.out).dir;o.writeLine("// AUTOGENERATED CODE //"),l.forEach((e,t)=>{const{dir:i,name:s,ext:n}=r.parse(e),a=r.relative(u,i),c=a.startsWith("../")?"":"./";o.writeLine(`export * from '${c}${a}/${s}';`)});const h=o.toString();e.writeFile(t.out,h,"utf8",e=>{if(e)throw e;const r=s(i.green.bold("SELECTORS INDEX CREATED! 🎊"),c);console.log(r)})}catch(p){const e=s(i.red.bold("SOMETHING WENT WRONG 🤕 \n",p.toString()),c);console.log(e)}
},{"./locateSelectors":"mDzt"}]},{},["ElvX"], null)
//# sourceMappingURL=/index.js.map